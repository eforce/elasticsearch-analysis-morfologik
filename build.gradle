buildscript {
    ext {
        pluginName = 'analysis-morfologik'
        pluginClassname = 'pl.allegro.tech.elasticsearch.plugin.analysis.morfologik.AnalysisMorfologikPlugin'
        pluginDescription = 'Morfologik Polish Lemmatizer plugin for Elasticsearch'
        versions = [
                'elasticsearch'         : '7.3.1',
                'lucene'                : '8.1.0',
                'log4j'                 : '2.11.0',
                'embedded_elasticsearch': 'master-SNAPSHOT',
                'spock'                 : '1.2-groovy-2.5',
                'groovy'                : '2.5.2'
        ]
    }
}

plugins {
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'io.codearte.nexus-staging' version '0.20.0'
    id 'com.adarshr.test-logger' version '1.6.0'
}

apply plugin: 'java'
apply plugin: 'groovy'

group = 'pl.allegro.tech.elasticsearch.plugin'
version = versions.elasticsearch

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    providedCompile
    wagon
    releaseJars {
        extendsFrom runtime
        exclude group: 'org.elasticsearch'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'org.slf4j'
        exclude group: 'log4j'
        exclude module: 'lucene-core'
        exclude module: 'lucene-analyzers-common'
    }
}

dependencies {
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: versions.elasticsearch
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-morfologik', version: versions.lucene
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: versions.log4j
    testCompile group: 'com.github.psk-ixolit', name: 'embedded-elasticsearch', version: versions.embedded_elasticsearch
    testCompile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: versions.elasticsearch
    testCompile group: 'org.spockframework', name: 'spock-core', version: versions.spock
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: versions.groovy
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

tasks.withType(GroovyCompile) {
    options.compilerArgs << "-proc:none"
}

test {
    systemProperties['path.home'] = System.getProperty("user.dir")
    systemProperties['elasticsearchVersion'] = versions.elasticsearch
    testLogging {
        showStandardStreams = false
        exceptionFormat = 'full'
    }
}

task makePluginDescriptor(type: Copy) {
    from 'src/main/templates'
    into "${project.buildDir}/tmp/plugin"
    expand([
            'descriptor': [
                    'name'                : pluginName,
                    'classname'           : pluginClassname,
                    'description'         : pluginDescription,
                    'version'             : project.property('version'),
                    'javaVersion'         : project.property('targetCompatibility'),
                    'elasticsearchVersion': versions.elasticsearch
            ]
    ])
}

task buildPluginZip(type: Zip, dependsOn: [':jar', ':makePluginDescriptor']) {
    from "${project.buildDir}/${libsDirName}"
    from configurations.releaseJars
    from 'build/tmp/plugin'
}

task unpackPlugin(type: Copy, dependsOn: [':buildPluginZip']) {
    delete "plugins"
    from "${project.buildDir}/${libsDirName}"
    from configurations.releaseJars
    from 'build/tmp/plugin'
    into "plugins/${pluginName}"
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat = 'full'
        events = ["failed", "skipped", "passed"]
        showCauses = true
        showStackTraces = true
    }
}

artifacts {
    archives buildPluginZip
}

wrapper {
    gradleVersion = '5.4.1'
    distributionType = Wrapper.DistributionType.ALL
}

nexusStaging {
    packageGroup = 'pl.allegro'
    numberOfRetries = 15
    delayBetweenRetriesInMillis = 5000
}

modifyPom {
    project {
        name 'elasticsearch-analysis-morfologik'
        description 'Morfologik Polish Lemmatizer plugin for Elasticsearch'
        url 'https://github.com/allegro/elasticsearch-analysis-morfologik'
        inceptionYear '2017'

        scm {
            url 'https://github.com/allegro/elasticsearch-analysis-morfologik'
            connection 'scm:git@github.com:allegro/elasticsearch-analysis-morfologik.git'
            developerConnection 'scm:git@github.com:allegro/elasticsearch-analysis-morfologik.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                id 'yukon'
                name 'YUKON'
            }
        }
    }
}
